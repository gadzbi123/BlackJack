Microsoft (R) Macro Assembler Version 14.29.30037.0	    06/26/21 13:55:06
mydll.asm						     Page 1 - 1


				;-------------------------------------------------------------------------
				.386 
				.MODEL FLAT, c

				OPTION CASEMAP:NONE

				.NOLIST
				.LIST

 00000000			.data 
 00000000			PI_double REAL8 3.1415926535897932384626433
	   400921FB54442D18
 00000008			d100 REAL8 100.0
	   4059000000000000
 00000010			d60 REAL8 60.0
	   404E000000000000
 00000018			halfCircle REAL8 180.0
	   4066800000000000
 00000020			rozwiazanie REAL8 0.0
	   0000000000000000
 00000000			.code 

 00000000			DllEntry PROC hInstDLL:DWORD, reason:DWORD, reserved1:DWORD

 00000003  B8 00000001		    MOV EAX, 1;TRUE 
				    RET

 0000000A			DllEntry ENDP
mydll.asm(25) : warning A6004:procedure argument or local not referenced : hInstDLL
mydll.asm(25) : warning A6004:procedure argument or local not referenced : reason
mydll.asm(25) : warning A6004:procedure argument or local not referenced : reserved1

				;****************************************************************************
				;Procedura RadToDeg
				.686
				.xmm
 0000000A			RadToDegAsm PROC rad:REAL8
 0000000D  F2/ 0F 10 0D		movsd xmm1, halfCircle      ;180.0 w xmm1
	   00000018 R
 00000015  F2/ 0F 5E 0D		divsd xmm1, PI_double       ;180'PI w xmm1
	   00000000 R
 0000001D  F2/ 0F 59 4D		mulsd xmm1, rad             ;rad * 180/PI
	   08
 00000022  F2/ 0F 2C C1		CVTTSD2SI eax,xmm1          ;przeniesienie ulamka do eax

 00000026  F2/ 0F 2A C0		CVTSI2SD xmm0, eax          ;konwersja na double
 0000002A  F2/ 0F 5C C8		subsd xmm1, xmm0            ;odejmowanie dajace czesc calkowita
 0000002E  66| 0F 70 C0		pshufd xmm0,xmm0,40h        ;przeniesienie czesci calkowitej z qworda
	   40

 00000033  F2/ 0F 10 C1		movsd xmm0, xmm1            ;przeniesienie czesci ulamkowej do xmm0
 00000037  66| 0F 16 0D		movhpd xmm1, d100           ;zaladownie d100 do gornej czesci xmm1
	   00000008 R
 0000003F  66| 0F 12 0D		movlpd xmm1, d60            ;zaladowanie d60 do dolnej czesci xmm1
	   00000010 R
 00000047  66| 0F 59 C8		mulpd xmm1, xmm0            ;mnozenie osobno czesci czalkowitej i po przecinku

 0000004B  66| 0F 70 C1		pshufd xmm0, xmm1, 0Eh      ;przeniesienie calkowitej czesci xmm1 do dolnej czesci xmm0
	   0E
 00000050  F2/ 0F 58 C8		addsd xmm1, xmm0            ;dodanie calosci i ulamkow
 00000054  F2/ 0F 11 0D		movsd rozwiazanie, xmm1     ;zapisanie wyniku do zmiennej
	   00000020 R
 0000005C  DD 05 00000020 R	fld rozwiazanie             ;zwracanie wartosci przez ST(0)
				ret
 00000064			RadToDegAsm ENDP
				;****************************************************************************
				;Procedura CheckSSE w asm
 00000064			CheckSSEAsm PROC NEAR 
 00000064  53			    push ebx        ;zapisanie rejestrów na stos
 00000065  51			    push ecx
 00000066  52			    push edx
 00000067  B8 00000001		    mov eax,1
 0000006C  0F A2		    cpuid
 0000006E  33 C0		    xor eax,eax     ;bity ktore wspieraja SSE to ECX=0,9,19,20; EDX=19,25,26
 00000070  0F BA E1 00		    bt ecx,0        ;sprawdzenie rejestru ECX
 00000074  0F 92 C0		    setc al
 00000077  0F BA E1 09		    bt ecx,9
 0000007B  0F 92 C3		    setc bl
 0000007E  22 C3		    and al,bl
 00000080  0F BA E1 13		    bt ecx,19
 00000084  0F 92 C3		    setc bl
 00000087  22 C3		    and al,bl
 00000089  0F BA E1 14		    bt ecx,20
 0000008D  0F 92 C3		    setc bl
 00000090  22 C3		    and al,bl
 00000092  0F BA E2 13		    bt edx,19       ;Sprawdzenie rejestru EDX
 00000096  0F 92 C3		    setc bl
 00000099  22 C3		    and al,bl
 0000009B  0F BA E2 19		    bt edx,25
 0000009F  0F 92 C3		    setc bl
 000000A2  22 C3		    and al,bl
 000000A4  0F BA E2 1A		    bt edx,26
 000000A8  0F 92 C3		    setc bl
 000000AB  22 C3		    and al,bl
 000000AD  5A			    pop edx         ;przywrócenie wartoœci pozosta³ych rejestrów
 000000AE  59			    pop ecx
 000000AF  5B			    pop ebx
 000000B0  C3			    RET				; powrot z procedury 
 000000B1			CheckSSEAsm ENDP	

				END DllEntry 
				;**************************************************************************** 
Microsoft (R) Macro Assembler Version 14.29.30037.0	    06/26/21 13:55:06
mydll.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000028 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000B1 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CheckSSEAsm  . . . . . . . . . .	P Near	 00000064 _TEXT	Length= 0000004D Public C
DllEntry . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000000A Public C
RadToDegAsm  . . . . . . . . . .	P Near	 0000000A _TEXT	Length= 0000005A Public C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000001h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT

	   3 Warnings
	   0 Errors
